/*------------------------------------*\
  #INPUT
\*------------------------------------*/

.input-wrapper {
    display: block;
    margin: 28px 8px;
    position: relative;
}

.input {
    display: block;
    padding: 8px 0px 8px 0px;
    width: 300px;

    border: none;
    border-bottom: 1px solid rgba(0,0,0, 0.42);

    font-family: "Roboto", sans-serif;
    font-size: 16px;
    color: rgba(#000, 0.87);
}

.input.fill, .input.fill ~ .input__bottom-bar {
    width: 100%;
}

.input:focus {
    outline: none;
}


/* Chrome/Opera/Safari/IE 10+ */
.input::placeholder {
    color: transparent;
}

/* Firefox 18- */
.input:-moz-placeholder {
    color: transparent;
 }

/* Firefox 19+ */
.input::-moz-placeholder {
    color: transparent;
 }


/* Chrome/Opera/Safari/IE 10+ */
input:focus::placeholder {
    color: rgba(0, 0, 0, 0.42);
}

/* Firefox 19+ */
input:focus::-moz-placeholder {
    color: rgba(0, 0, 0, 0.42);
}


/**
 * If input field is active 
 *           OR          
 * Input field is not empty
 * elevate label
 *
 * NOTE:
 * Input value attribute needs to be changed using javascript
 * example: elemenet.setAttribute("value", "value from field")
 * since css only detects initial input value
 */

 /* Input active state */

.input:focus ~ .label, input[value]:not([value=""]) ~ .label {
    font-size: 12px;
    top: -28px;
    cursor: default;
}

.label {
    position: absolute;
    padding-top: 16px;
    top: -8px;

    font-family: "Roboto", sans-serif;
    font-size: 16px;
    color: rgba(0, 0, 0, 0.54);
    cursor: text;

    transition: 0.15s ease-out all;
}

.helper {
    font-family: "Roboto", sans-serif;
    font-size: 12px;
    color: rgba(0, 0, 0, 0.54);
}

/**
 * Input bottom bar
 * expands when input state is active
 */

.input__bottom-bar { 
    position: relative;
    display: block;
    background: rgba(0, 0, 0, 0.87);
    width: 300px;
    margin-bottom: 8px;
}

.input__bottom-bar::before, .input__bottom-bar::after {
    content: '';
    height: 2px;
    width: 0;
    bottom: 1px;
    position: absolute;
    background: #616161;
    transition: 0.15s ease-out all;
}

/**
 * Split input bar into 2 parts
 * set them both in middle by offseting right and left
 * once we set width 50% on both bar parts
 * we will create effect that will make loke like
 * the bar is expanding from a middle
*/

.input__bottom-bar::before {
    left: 50%;
}

.input__bottom-bar::after {
    right: 50%; 
}
  
/* Input active state */
.input:focus ~ .input__bottom-bar::before, .input:focus ~ .input__bottom-bar::after {
    width:50%;
}

/* Input error state */

.input.error {
    border-bottom: 1px solid red;
}

.input.error ~ .label {
    color: red;
}

.input.error ~ .helper {
    color: rgba(red, 0.87);
}

.input.error ~ .input__bottom-bar {
    background: red;
}

.input.error ~ .input__bottom-bar::after,
.input.error ~ .input__bottom-bar::before {
    width: 50%;
    background: red;
}